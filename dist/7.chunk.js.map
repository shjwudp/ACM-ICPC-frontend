{"version":3,"sources":["webpack:///./src/app/layout/charts/charts.module.ts","webpack:///./src/app/layout/charts/charts.component.ts","webpack:///./src/app/layout/charts/charts-routing.module.ts","webpack:///./src/app/layout/charts/charts.component.scss","webpack:///./~/ng2-charts/charts/charts.js","webpack:///./~/ng2-charts/index.js","webpack:///./src/app/layout/charts/charts.component.html"],"names":[],"mappings":"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B;;;;;;;;;;;;;;;;;;;ACPa;AACc;AAEF;AAErD,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAe,EAAE;CAC3C,CAAC;AAMF,IAAa,mBAAmB;IAAhC;IAAmC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAvB,mBAAmB;IAJ/B,8EAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;KAC1B,CAAC;GACW,mBAAmB,CAAI;AAAJ;;;;;;;;ACbhC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,wDAAwD,IAAI;AACtG;AACA;AACA,qDAAqD;AACrD,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,kBAAkB,qBAAqB;AACvC,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,qBAAqB,qBAAqB;AAC1C,uBAAuB,qBAAqB;AAC5C,oBAAoB,qBAAqB;AACzC,oBAAoB,qBAAqB;AACzC,wBAAwB,sBAAsB;AAC9C,wBAAwB,sBAAsB;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,6CAA6C,eAAe,EAAE;AAC9D,2DAA2D,uBAAuB,EAAE;AACpF,kDAAkD,eAAe,EAAE;AACnE,gEAAgE,uBAAuB,EAAE;AACzF,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,kDAAkD,uBAAuB,EAAE;AAC3E,2DAA2D,yBAAyB,EAAE;AACtF,uDAAuD,uBAAuB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;;;;;;;;ACJA,04G","file":"7.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\n\nimport { ChartsRoutingModule } from './charts-routing.module';\nimport { ChartsComponent } from './charts.component';\nimport { PageHeaderModule } from '../../shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        Ng2Charts,\n        ChartsRoutingModule,\n        PageHeaderModule\n    ],\n    declarations: [ChartsComponent]\n})\nexport class ChartsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/charts/charts.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent implements OnInit {\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string = 'bar';\n    public barChartLegend: boolean = true;\n\n    public barChartData: any[] = [\n    {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n    {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'}\n    ];\n    // Doughnut\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string = 'doughnut';\n    // Radar\n    public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n    public radarChartData: any = [\n        {data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B'}\n    ];\n    public radarChartType: string = 'radar';\n    // Pie\n    public pieChartLabels:string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData:number[] = [300, 500, 100];\n    public pieChartType:string = 'pie';\n    // PolarArea\n    public polarAreaChartLabels:string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    public polarAreaChartData:number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend:boolean = true;\n\n    public polarAreaChartType:string = 'polarArea';\n    // lineChart\n    public lineChartData: Array<any> = [\n        {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'},\n        {data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C'}\n    ];\n    public lineChartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    public lineChartOptions: any = {\n        responsive: true\n    };\n    public lineChartColors: Array<any> = [\n    { // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n        backgroundColor: 'rgba(77,83,96,0.2)',\n        borderColor: 'rgba(77,83,96,1)',\n        pointBackgroundColor: 'rgba(77,83,96,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(77,83,96,1)'\n    },\n    { // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n    ];\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n\n    // events\n    public chartClicked(e: any): void {\n        // console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        // console.log(e);\n    }\n\n    public randomize(): void {\n        // Only Change 3 values\n        const data = [\n            Math.round(Math.random() * 100),\n            59,\n            80,\n            (Math.random() * 100),\n            56,\n            (Math.random() * 100),\n            40\n        ];\n        const clone = JSON.parse(JSON.stringify(this.barChartData));\n        clone[0].data = data;\n        this.barChartData = clone;\n        /**\n        * (My guess), for Angular to recognize the change in the dataset\n        * it has to change the dataset variable directly,\n        * so one way around it, is to clone the data, change it and then\n        * assign it;\n        */\n    }\n    constructor() { }\n    ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/charts/charts.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\n\nconst routes: Routes = [\n    { path: '', component: ChartsComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/charts/charts-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/charts/charts.component.scss\n// module id = 822\n// module chunks = 7","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                if (changes['data']) {\n                    this.updateChartData(changes['data'].currentValue);\n                }\n                else {\n                    this.updateChartData(changes['datasets'].currentValue);\n                }\n                this.chart.update();\n            }\n            else {\n                // otherwise rebuild the chart\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.updateChartData = function (newDataValues) {\n        if (Array.isArray(newDataValues[0].data)) {\n            this.chart.data.datasets.forEach(function (dataset, i) {\n                dataset.data = newDataValues[i].data;\n                if (newDataValues[i].label) {\n                    dataset.label = newDataValues[i].label;\n                }\n            });\n        }\n        else {\n            this.chart.data.datasets[0].data = newDataValues;\n        }\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error,\\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]', exportAs: 'base-chart' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n    ]; };\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = function () { return []; };\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/charts/charts.js\n// module id = 835\n// module chunks = 7","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/index.js\n// module id = 836\n// module chunks = 7","module.exports = \"<app-page-header [heading]=\\\"'Charts'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Bar Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"randomize()\\\">Update</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Doughnut Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart height=\\\"180px\\\" [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Radar Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart height=\\\"150px\\\" [datasets]=\\\"radarChartData\\\" [labels]=\\\"radarChartLabels\\\" [chartType]=\\\"radarChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Pie Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart height=\\\"150px\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Polar Area Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart height=\\\"130px\\\" [data]=\\\"polarAreaChartData\\\" [labels]=\\\"polarAreaChartLabels\\\" [legend]=\\\"polarAreaLegend\\\" [chartType]=\\\"polarAreaChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col col-sm-6\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                Line Chart\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <canvas baseChart height=\\\"130\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                </canvas>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/charts/charts.component.html\n// module id = 853\n// module chunks = 7"],"sourceRoot":""}